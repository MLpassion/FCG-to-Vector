package malware.feature;

import java.util.BitSet;

public class JaccardFunctionMatcher implements FunctionMatcher<BitSet> {

  @Override
  public boolean matching(BitSet function1Feature, BitSet function2Feature, float threashold) {
    // TODO Auto-generated method stub
    return false;
  }

  @Override
  public double similarity(BitSet function1Feature, BitSet function2Feature) {
    if (function1Feature.isEmpty() && function2Feature.isEmpty()) {
      return 1;
    } else if((function1Feature.isEmpty() && !function2Feature.isEmpty()) ||
        (!function1Feature.isEmpty() && function2Feature.isEmpty())){
      return 0;
    }
    
    BitSet tmpBitSet = new BitSet(Math.max(function1Feature.size(), function1Feature.size()));
    tmpBitSet.or(function1Feature);
    tmpBitSet.and(function2Feature);
    int intersection = tmpBitSet.cardinality();
    
    tmpBitSet.or(function1Feature);
    tmpBitSet.or(function2Feature);
    int union = tmpBitSet.cardinality();
    
    return (double)intersection / union;
  }

}
