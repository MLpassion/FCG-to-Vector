package malware.feature;

public class FrequencyJaccardFunctionMatcher implements FunctionMatcher<Double[]> {

  @Override
  public boolean matching(Double[] function1Feature, Double[] function2Feature, float threashold) {
    return similarity(function1Feature, function2Feature) >= threashold;
  }

  @Override
  public double similarity(Double[] function1Feature, Double[] function2Feature) {
    if (function1Feature.length != function2Feature.length) {
      throw new IllegalArgumentException(
          String.format("ERROR: The two input arrays are of different size %d and %d.",
              function1Feature.length, function2Feature.length));
    }
    
    double min = 0.0;
    double max = 0.0;

    for (int i = 0; i < function1Feature.length; i++) {
      min += Math.min(function1Feature[i], function2Feature[i]);
      max += Math.max(function1Feature[i], function2Feature[i]);
    }

    return max == 0.0 ? 0.0 : min / max;
  }

}
