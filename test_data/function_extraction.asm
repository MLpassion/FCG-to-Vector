.text:00401000						       ;
.text:00401000						       ; +-------------------------------------------------------------------------+
.text:00401000						       ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.text:00401000						       ; Segment type: Pure code
.text:00401000						       ; Segment permissions: Read/Execute
.text:00401000 56							       push    esi
.text:00401001 8D 44 24	08						       lea     eax, [esp+8]
.text:00401006 8B F1							       mov     esi, ecx
.text:00401008 E8 1C 1B	00 00						       call    ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception(char const * const &)
.text:0040100D C7 06 08	BB 42 00					       mov     dword ptr [esi],	offset off_42BB08
.text:00401013 8B C6							       mov     eax, esi
.text:00401015 5E							       pop     esi
.text:00401016 C2 04 00							       retn    4
.text:00401016						       ; ---------------------------------------------------------------------------
.text:00401019 CC CC CC	CC CC CC CC					       align 10h
.text:00401020 C7 01 08	BB 42 00					       mov     dword ptr [ecx],	offset off_42BB08
.text:00401026 E9 26 1C	00 00						       jmp     sub_402C51
.text:00401026						       ; ---------------------------------------------------------------------------
.text:0040102B CC CC CC	CC CC						       align 10h
.text:00401030 56							       push    esi
.text:00401039 E8 13 1C	00 00						       call    sub_402C51
.text:00401045 56							       push    esi
.text:00401046 E8 6C 1E	00 00						       call    ??3@YAXPAX@Z    ; operator delete(void *)
.text:0040104E
.text:0040104E						       loc_40104E:			       ; CODE XREF: .text:00401043j
.text:00401050 5E							       pop     esi
.text:00401051 C2 04 00							       retn    4
.text:00401051						       ; ---------------------------------------------------------------------------
.text:00401054 CC CC CC	CC CC CC CC CC CC CC CC	CC			       align 10h
.text:00401060 8B 44 24	08						       mov     eax, [esp+8]
.text:0040106C C3							       retn
.text:0040106C						       ; ---------------------------------------------------------------------------
.text:0040106D CC CC CC							       align 10h
.text:00401070 8B 44 24	04						       mov     eax, [esp+4]
.text:00401074 8D 50 01							       lea     edx, [eax+1]
.text:00401077
.text:00401077						       loc_401077:			       ; CODE XREF: .text:0040107Cj
.text:00401077 8A 08							       mov     cl, [eax]
.text:00401079 40							       inc     eax
.text:00401080 C3							       retn
.text:00401165 C7 05 AC	49 52 00 00 00 00 00				       mov     dword_5249AC, 0
.text:0040116F
.text:0040116F						       loc_40116F:			       ; CODE XREF: .text:00401157j
.text:0040116F B8 FB FF	FF FF						       mov     eax, 0FFFFFFFBh
.text:00401174 C2 08 00							       retn    8
.text:00401174						       ; ---------------------------------------------------------------------------
.text:00401177 CC CC CC	CC CC CC CC CC CC				       align 10h
.text:00401180 6A 04							       push    4
text:0040120F
.text:0040120F						       loc_40120F:			       ; CODE XREF: .text:004011F7j
.text:0040120F B8 02 00	00 00						       mov     eax, 2
.text:00401214 C2 08 00							       retn    8
.text:00401214						       ; ---------------------------------------------------------------------------
.text:00401217 CC CC CC	CC CC CC CC CC CC				       align 10h
.text:00401220 6A 04							       push    4
.text:00401222 68 00 10	00 00						       push    1000h
.text:00401256 C2 04 00							       retn    4
.text:00401256						       ; ---------------------------------------------------------------------------
.text:00401259 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC CC+		       db 17h dup(0CCh)
.text:00401270						       ; [00000005 BYTES: COLLAPSED FUNCTION std::_Ref_count_base::_Get_deleter(type_info const	&). PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:00401275 CC CC CC	CC CC CC CC CC CC CC CC				       align 10h
.text:00401280 B8 FE FF	FF FF						       mov     eax, 0FFFFFFFEh
.text:00401285 C3							       retn
.text:0040134F
.text:0040134F						       loc_40134F:			       ; CODE XREF: .text:00401347j
.text:0040134F 5E							       pop     esi
.text:00401350 C3							       retn
.text:00401350						       ; ---------------------------------------------------------------------------
.text:00401351 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC CC+		       db 1Fh dup(0CCh)
.text:00401370						       ; ---------------------------------------------------------------------------
.text:00401370 8B 4C 24	04						       mov     ecx, [esp+4]
.text:00401389 C3							       retn
.text:00401389						       ; ---------------------------------------------------------------------------
.text:0040138A CC CC CC	CC CC CC					       align 10h
.text:00401390
.text:00401390						       ; =============== S U B R O U T I N E =======================================
.text:00401390
.text:00401390
.text:00401390						       sub_401390      proc near	       ; CODE XREF: sub_43E84Ej
.text:00401390
.text:00401390						       arg_0	       = dword ptr  4
.text:00401390
.text:00401390 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:00401394 B8 1F CD	98 AE						       mov     eax, 0AE98CD1Fh
.text:00401399 F7 E1							       mul     ecx
.text:0040139B C1 EA 1E							       shr     edx, 1Eh
.text:0040139E 69 D2 FA	C9 D6 5D					       imul    edx, 5DD6C9FAh
.text:004013A4 56							       push    esi
.text:004013A5 57							       .text:004013E4						       ; ---------------------------------------------------------------------------
.text:004013E4
.text:004013E4						       loc_4013E4:			       ; CODE XREF: sub_401390+4Aj
.text:004013E4 8B F8							       mov     edi, eax
.text:004013E6
.text:004013E6						       loc_4013E6:			       ; CODE XREF: sub_401390+52j
.text:004013E6 85 FF							       test    edi, edi
.text:004013E8 74 08							       jz      short loc_4013F2
.text:004013F2
.text:004013F2						       loc_4013F2:			       ; CODE XREF: sub_401390+58j
.text:004013F2 8B D1							       mov     edx, ecx
.text:004013F4 8D 81 D6	8D 82 F7					       lea     eax, [ecx-87D722Ah]
.text:004013FA 81 F2 60	4F 15 0B					       xor     edx, 0B154F60h
.text:00401411
.text:00401413						       sub_401390      endp
.text:00401413
.text:00401413						       ; ---------------------------------------------------------------------------
.text:00401414 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC CC+		       align 40h
.text:00401440 8B 41 14							       mov     eax, [ecx+14h]
.text:00401443 C3							       retn
.text:00401443						       ; ---------------------------------------------------------------------------
.text:00401444 CC CC CC	CC CC CC CC CC CC CC CC	CC			       align 10h
.text:00401450
.text:00401450						       unknown_libname_1:		       ; Microsoft VisualC 2-11/net runtime
.text:00401450 83 79 18	10						       cmp     dword ptr [ecx+18h], 10h
.text:00401454 72 04							       jb      short loc_40145A
.text:00401456 8B 41 04							       mov     eax, [ecx+4]
.text:00401459 C3							       retn
.text:0040145A						       ; ---------------------------------------------------------------------------
.text:0040145A
.text:0040145A						       loc_40145A:			       ; CODE XREF: .text:00401454j
.text:0040145A 8D 41 04							       lea     eax, [ecx+4]
.text:0040145D C3							       retn
.text:0040145D						       ; ---------------------------------------------------------------------------
.text:0040145E CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC CC+		       db 12h dup(0CCh)
.text:00401470						       ; ---------------------------------------------------------------------------
.text:00401470 8B C1							       mov     eax, ecx
.text:00401472 C3							       retn
.text:00401472						       ; ---------------------------------------------------------------------------
.text:00401473 CC CC CC	CC CC CC CC CC CC CC CC	CC CC			       align 10h
.text:00401480
.text:00401480						       unknown_libname_2:		       ; Microsoft VisualC 2-11/net runtime
.text:00401480 83 79 18	10						       cmp     dword ptr [ecx+18h], 10h
.text:00401484 72 04							       jb      short loc_40148A
.text:00401486 8B 41 04							       mov     eax, [ecx+4]
.text:00401489 C3							       retn
.text:0040148A						       ; ---------------------------------------------------------------------------
.text:0040148A
.text:0040148A						       loc_40148A:			       ; CODE XREF: .text:00401484j
.text:0040148A 8D 41 04							       lea     eax, [ecx+4]
.text:0040148D C3							       retn
.text:0040148D						       ; ---------------------------------------------------------------------------
.text:0040148E CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC CC+		       align 20h
.text:004014A0						       ; [00000005 BYTES: COLLAPSED FUNCTION AFX_MAINTAIN_STATE2::AFX_MAINTAIN_STATE2(AFX_MODULE_STATE *). PRESS KEYPAD	CTRL-"+" TO EXPAND]
.text:004014A5 CC CC CC	CC CC CC CC CC CC CC CC				       align 10h
.text:004014B0 8B 44 24	04						       mov     eax, [esp+4]
.text:004014B4 50							       push    eax
.text:004014B5 E8 FD 19	00 00						       call    ??3@YAXPAX@Z    ; operator delete(void *)
.text:004014BA 59							       pop     ecx
.text:004014BB C2 08 00							       retn    8
.text:004014BB						       ; ---------------------------------------------------------------------------
.text:004014BE CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC CC+		       db 12h dup(0CCh)
.text:004014D0						       ; ---------------------------------------------------------------------------
.text:004014D0 56							       push    esi
.text:004014D1 57							       push    edi
.text:004014D2 8B 7C 24	0C						       mov     edi, [esp+0Ch]
.text:004014D6 85 FF							       test    edi, edi
.text:004014D8 74 2C							       jz      short loc_401506
.text:004014DA 8B 71 18							       mov     esi, [ecx+18h]
.text:004014DD 8D 41 04							       lea     eax, [ecx+4]
.text:004014E0 83 FE 10							       cmp     esi, 10h
.text:004014E3 72 04							       jb      short loc_4014E9
.text:004014E5 8B 10							       mov     edx, [eax]
.text:004014E7 EB 02							       jmp     short loc_4014EB
.text:004014E9						       ; ---------------------------------------------------------------------------
.text:004014E9
.text:004014E9						       loc_4014E9:			       ; CODE XREF: .text:004014E3j
.text:004014E9 8B D0							       mov     edx, eax
.text:004014EB
.text:004014EB						       loc_4014EB:			       ; CODE XREF: .text:004014E7j
.text:004014EB 3B FA							       cmp     edi, edx
.text:004014ED 72 17							       jb      short loc_401506
.text:004014EF 83 FE 10							       cmp     esi, 10h
.text:004014F2 72 02							       jb      short loc_4014F6
.text:004014F4 8B 00							       mov     eax, [eax]
.text:004014F6
.text:004014F6						       loc_4014F6:			       ; CODE XREF: .text:004014F2j
.text:004014F6 8B 49 14							       mov     ecx, [ecx+14h]
.text:004014F9 03 C8							       add     ecx, eax
.text:004014FB 3B CF							       cmp     ecx, edi
.text:004014FD 76 07							       jbe     short loc_401506
.text:004014FF 5F							       pop     edi
.text:00401500 B0 01							       mov     al, 1
.text:00401502 5E							       pop     esi
.text:00401503 C2 04 00							       retn    4
.text:00401506						       ; ---------------------------------------------------------------------------
.text:00401506
.text:00401506						       loc_401506:			       ; CODE XREF: .text:004014D8j
.text:00401506											       ; .text:004014EDj ...
.text:00401506 5F							       pop     edi
.text:00401507 32 C0							       xor     al, al
.text:00401509 5E							       pop     esi
.text:0040150A C2 04 00							       retn    4
.text:0040150A						       ; ---------------------------------------------------------------------------
.text:0040150D CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC CC+		       align 20h
.text:00401520 83 C8 FF							       or      eax, 0FFFFFFFFh
.text:00401523 C3							       retn
.text:00401523						       ; ---------------------------------------------------------------------------
.text:00401524 CC CC CC	CC CC CC CC CC CC CC CC	CC			       align 10h
.text:00401530
.text:00401530						       ; =============== S U B R O U T I N E =======================================
.text:00401530
.text:00401530
.text:00401530						       ; int __cdecl sub_401530(char *)
.text:00401530						       sub_401530      proc near	       ; CODE XREF: sub_43E7DBj
.text:00401530
.text:00401530						       var_C	       = dword ptr -0Ch
.text:00401530						       arg_0	       = dword ptr  4
.text:00401530
.text:00401530 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:00401534 83 EC 0C							       sub     esp, 0Ch
.text:00401537 85 C9							       test    ecx, ecx
.text:00401539 77 0F							       ja      short loc_40154A
.text:0040153B 33 C9							       xor     ecx, ecx
.text:0040153D
.text:0040153D						       loc_40153D:			       ; CODE XREF: sub_401530+24j
.text:0040153D 51							       push    ecx	       ; size_t
.text:0040153E E8 74 1A	00 00						       call    ??2@YAPAXI@Z    ; operator new(uint)
.text:00401543 83 C4 04							       add     esp, 4
.text:00401546 83 C4 0C							       add     esp, 0Ch
.text:00401549 C3							       retn
.text:0040154A						       ; ---------------------------------------------------------------------------
.text:0040154A
.text:0040154A						       loc_40154A:			       ; CODE XREF: sub_401530+9j
.text:0040154A 83 C8 FF							       or      eax, 0FFFFFFFFh
.text:0040154D 33 D2							       xor     edx, edx
.text:0040154F F7 F1							       div     ecx
.text:0040155B 8D 4C 24	04						       lea     ecx, [esp+10h+var_C] ; this
.text:0040155F C7 44 24	14 00 00 00 00					       mov     [esp+10h+arg_0],	0
.text:00401567 E8 BD 15	00 00						       call    ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception(char const * const &)
.text:0040156C 68 80 57	43 00						       push    offset unk_435780
.text:00401576 C7 44 24	08 08 BB 42 00					       mov     [esp+14h+var_C],	offset off_42BB08
.text:0040157E E8 99 1A	00 00						       call    __CxxThrowException@8 ; _CxxThrowException(x,x)
.text:0040157E						       sub_401530      endp
.text:0040157E
.text:0040157E						       ; ---------------------------------------------------------------------------
.text:00401583 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC CC+		       align 20h
.text:004015A0
.text:004015A0						       ; =============== S U B R O U T I N E =======================================
.text:004015A0
.text:004015A0
.text:004015A0						       ; int __stdcall sub_4015A0(struct std::exception	*)
.text:004015A0						       sub_4015A0      proc near	       ; CODE XREF: sub_43E7D6j
.text:004015A0
.text:004015A0						       arg_0	       = dword ptr  4
.text:004015A0
.text:004015A0 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:004015A4 56							       push    esi
.text:004015A5 50							       push    eax	       ; struct	std::exception *
.text:004015A6 8B F1							       mov     esi, ecx
.text:004015A8 E8 EC 15	00 00						       call    ??0exception@std@@QAE@ABV01@@Z ;	std::exception::exception(std::exception const &)
.text:004015AD C7 06 08	BB 42 00					       mov     dword ptr [esi],	offset off_42BB08
.text:004015B3 8B C6							       mov     eax, esi
.text:004015B5 5E							       pop     esi
.text:004015B6 C2 04 00							       retn    4
.text:004015B6						       sub_4015A0      endp
.text:004015B6
.text:004015B6						       ; ---------------------------------------------------------------------------
.text:004015B9 CC CC CC	CC CC CC CC					       align 10h
.text:004015C0 51							       push    ecx
.text:004015C1 8A 44 24	03						       mov     al, [esp+3]
.text:004015C5 59							       pop     ecx
.text:004015C6 C3							       retn
.text:004015F0						       ; ---------------------------------------------------------------------------
.text:004015F1 CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC		       align 10h
.text:00401600 8B 44 24	10						       mov     eax, [esp+10h]
.text:00401604 8B 4C 24	0C						       mov     ecx, [esp+0Ch]
.text:00401608 8B 54 24	08						       mov     edx, [esp+8]
.text:0040160C 56							       push    esi
.text:0040160D 8B 74 24	08						       mov     esi, [esp+8]
.text:00401611 50							       push    eax
.text:00401612 51							       push    ecx
.text:00401613 52							       push    edx
.text:00401614 56							       push    esi
.text:00401615 E8 25 19	00 00						       call    _memmove_s
.text:0040161A 83 C4 10							       add     esp, 10h
.text:0040161D 8B C6							       mov     eax, esi
.text:0040161F 5E							       pop     esi
.text:00401620 C3							       retn
.text:00401635						       ; ---------------------------------------------------------------------------
.text:00401636 CC CC CC	CC CC CC CC CC CC CC				       align 10h
.text:00401640						       ; [00000005 BYTES: COLLAPSED FUNCTION AFX_MAINTAIN_STATE2::AFX_MAINTAIN_STATE2(AFX_MODULE_STATE *). PRESS KEYPAD	CTRL-"+" TO EXPAND]
.text:00401645 CC CC CC	CC CC CC CC CC CC CC CC				       align 10h
.text:00401650
.text:00401650						       ; =============== S U B R O U T I N E =======================================
.text:00401650
.text:00401650
.text:00401650						       sub_401650      proc near	       ; CODE XREF: sub_43E7F9j
.text:00401650
.text:00401650						       arg_0	       = dword ptr  4
.text:00401650
.text:00401650 83 79 18	10						       cmp     dword ptr [ecx+18h], 10h
.text:00401654 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:00401658 89 41 14							       mov     [ecx+14h], eax
.text:0040165B 72 0A							       jb      short loc_401667
.text:0040165D 8B 49 04							       mov     ecx, [ecx+4]
.text:00401660 C6 04 01	00						       mov     byte ptr	[ecx+eax], 0
.text:00401664 C2 04 00							       retn    4
.text:00401667						       ; ---------------------------------------------------------------------------
.text:00401667
.text:00401667						       loc_401667:			       ; CODE XREF: sub_401650+Bj
.text:00401667 C6 44 01	04 00						       mov     byte ptr	[ecx+eax+4], 0
.text:0040166C C2 04 00							       retn    4
.text:0040166C						       sub_401650      endp
.text:0040166C
.text:0040166C						       ; ---------------------------------------------------------------------------
.text:0040166F CC CC CC	CC CC CC CC CC CC CC CC	CC CC CC CC CC+		       align 20h
.text:00401680 B8 FE FF	FF FF						       mov     eax, 0FFFFFFFEh
.text:00401685 C3							       retn
.text:00401685						       ; ---------------------------------------------------------------------------
.text:00401686 CC CC CC	CC CC CC CC CC CC CC				       align 10h
.text:00401690 8B 44 24	04						       mov     eax, [esp+4]
.text:00401694 6A 00							       push    0
.text:00401696 50							       push    eax
.text:00401697 E8 3F D1	03 00						       call    sub_43E7DB
.text:0040169C 83 C4 08							       add     esp, 8
.text:0040169F C2 04 00							       retn    4
